import SuppliedPartDatum from "./suppliedPartDatum";
import SuppliedPartType from "./suppliedPartType";
import SymbolMapType from "./symbolMapType";

export const partData: SuppliedPartDatum[] = [
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.PlugboardA,
      SymbolMapType.Plugboard,
      "plugboardA",
      new Uint8Array([
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
        0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
        0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23,
        0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b,
        0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
        0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53,
        0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,
        0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
        0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x81, 0x82, 0x83,
        0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b,
        0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
        0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3,
        0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
        0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,
        0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,
        0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,
        0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
        0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,
        0xfc, 0xfd, 0xfe, 0xff,
      ]),
      "40aff2e9d2d8922e47afd4648e6967497158785fbd1da870e7110266bf944880",
      "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.RotorA,
      SymbolMapType.Rotor,
      "rotorA",
      new Uint8Array([
        0xd2, 0x80, 0xea, 0x9e, 0x3f, 0x31, 0x6c, 0x87, 0x25, 0x01, 0xbd, 0x0e,
        0x85, 0x8d, 0x18, 0xc4, 0xe4, 0x40, 0x39, 0x59, 0xf3, 0x6d, 0x68, 0x00,
        0xa9, 0xf0, 0x48, 0x2f, 0x1e, 0x06, 0x21, 0xfc, 0x36, 0x52, 0x37, 0xb7,
        0x8a, 0xc5, 0x51, 0xc0, 0x45, 0xf5, 0xa8, 0x88, 0x17, 0xb3, 0xd0, 0x8c,
        0x0a, 0x20, 0x4e, 0x9b, 0xed, 0x82, 0x4c, 0xfd, 0x5e, 0xb0, 0xac, 0x3e,
        0x75, 0x2c, 0x81, 0x61, 0xff, 0xfb, 0x03, 0xa6, 0x44, 0xc8, 0xbf, 0x0b,
        0xc6, 0x47, 0xbe, 0xd6, 0x30, 0x1b, 0x3c, 0x8e, 0x5f, 0xa2, 0x83, 0xb6,
        0x96, 0x26, 0x22, 0x15, 0x78, 0xc1, 0x76, 0x95, 0xe0, 0x4a, 0x6b, 0x16,
        0x7a, 0x50, 0x98, 0xf8, 0x14, 0xc3, 0xd5, 0x05, 0xd4, 0x34, 0xcd, 0x5b,
        0x08, 0x69, 0x7d, 0x19, 0x1d, 0xef, 0x0f, 0xc7, 0xf6, 0x63, 0xc9, 0xf9,
        0xde, 0x2d, 0x3b, 0xe5, 0x91, 0x09, 0x54, 0xae, 0xda, 0xb4, 0x7b, 0xf4,
        0xaa, 0x5c, 0xcf, 0xec, 0xa7, 0xdb, 0x4b, 0xe7, 0xcb, 0xe6, 0xa1, 0xc2,
        0x2a, 0xfe, 0x7c, 0x10, 0xb8, 0x4d, 0xdf, 0x74, 0x73, 0x89, 0x0c, 0x94,
        0x5d, 0xdd, 0x32, 0x49, 0xe3, 0x29, 0x58, 0x92, 0x46, 0xfa, 0xb1, 0x77,
        0x12, 0xe2, 0xa0, 0x2b, 0xeb, 0xce, 0xd9, 0x41, 0x24, 0x84, 0x53, 0xe1,
        0x9a, 0x8f, 0x04, 0x97, 0x3a, 0xee, 0x5a, 0x23, 0xb2, 0xd8, 0x7e, 0x6a,
        0x57, 0x62, 0x35, 0x56, 0x07, 0xdc, 0x55, 0x66, 0x9d, 0x93, 0x8b, 0xa3,
        0x1f, 0x43, 0xe9, 0xb5, 0x99, 0x13, 0x79, 0x7f, 0xf1, 0x64, 0x2e, 0xf7,
        0x90, 0x6e, 0x42, 0x9c, 0xd1, 0xe8, 0xab, 0x0d, 0xcc, 0x86, 0x4f, 0x33,
        0x71, 0x72, 0x1a, 0x3d, 0x28, 0x65, 0x27, 0xca, 0x60, 0x1c, 0xd7, 0x02,
        0xad, 0x6f, 0xbb, 0x11, 0x67, 0x38, 0x9f, 0xaf, 0xbc, 0xb9, 0xd3, 0x70,
        0xf2, 0xba, 0xa5, 0xa4,
      ]),
      "05e40387134b9e82cfe95ac45ff93ecf896b6f67af50db8f15a32548008ade88",
      "d280ea9e3f316c872501bd0e858d18c4e4403959f36d6800a9f0482f1e0621fc365237b78ac551c045f5a88817b3d08c0a204e9bed824cfd5eb0ac3e752c8161fffb03a644c8bf0bc647bed6301b3c8e5fa283b69626221578c17695e04a6b167a5098f814c3d505d434cd5b08697d191def0fc7f663c9f9de2d3be5910954aedab47bf4aa5ccfeca7db4be7cbe6a1c22afe7c10b84ddf7473890c945ddd3249e329589246fab17712e2a02bebced941248453e19a8f04973aee5a23b2d87e6a5762355607dc55669d938ba31f43e9b59913797ff1642ef7906e429cd1e8ab0dcc864f3371721a3d286527ca601cd702ad6fbb1167389fafbcb9d370f2baa5a4"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.RotorB,
      SymbolMapType.Rotor,
      "rotorB",
      new Uint8Array([
        0x69, 0x5b, 0x06, 0x2f, 0xe1, 0x79, 0x82, 0x84, 0x14, 0xd9, 0x27, 0x32,
        0x12, 0x52, 0xfc, 0x6a, 0x60, 0x8b, 0x72, 0xe7, 0x8a, 0x2d, 0xc2, 0x54,
        0xfe, 0xa3, 0xce, 0x6f, 0xc1, 0xab, 0xe6, 0x36, 0x3a, 0x00, 0x3d, 0x3f,
        0xe9, 0x7b, 0x9a, 0x9e, 0xbf, 0x97, 0x2c, 0xd3, 0xb2, 0xd0, 0x0f, 0x6b,
        0x37, 0x08, 0x22, 0x9c, 0x9f, 0xb4, 0x9b, 0x5f, 0x43, 0x7d, 0x45, 0xa1,
        0xa0, 0xb6, 0x4d, 0x18, 0xf6, 0x5e, 0xd1, 0xe5, 0x6c, 0xa6, 0x39, 0xfd,
        0xae, 0xaf, 0x61, 0x9d, 0xd4, 0xb9, 0x7f, 0x87, 0xed, 0x75, 0xee, 0x40,
        0x8c, 0x47, 0xea, 0x70, 0x89, 0xcf, 0xd8, 0x48, 0xc7, 0xb0, 0x21, 0x67,
        0x17, 0xeb, 0xbc, 0xc9, 0x83, 0x2e, 0x2b, 0x1c, 0xc6, 0x0a, 0xc0, 0x3c,
        0x96, 0xcc, 0xa9, 0xd7, 0xf3, 0x99, 0xa5, 0xef, 0x19, 0x98, 0x05, 0xd6,
        0x2a, 0x1d, 0x88, 0x86, 0x15, 0x4a, 0xf2, 0x28, 0x29, 0x46, 0x56, 0xc8,
        0x7e, 0x74, 0x1b, 0x1f, 0xda, 0x23, 0x0e, 0x20, 0x0c, 0x3e, 0xdc, 0x01,
        0xfb, 0x78, 0x16, 0xe8, 0xf5, 0x6d, 0x8e, 0x25, 0xec, 0x42, 0xca, 0xf7,
        0xc4, 0xbb, 0xb5, 0x03, 0x13, 0x35, 0xbe, 0xa8, 0xe2, 0xde, 0xe0, 0xff,
        0x30, 0x5a, 0x1e, 0xdb, 0xe3, 0xf1, 0x4b, 0x26, 0x07, 0x0d, 0x0b, 0xd2,
        0x62, 0x4f, 0x8d, 0xb7, 0x8f, 0x50, 0xdf, 0xc5, 0xf4, 0xcb, 0x53, 0xaa,
        0x85, 0xb1, 0xa7, 0x5d, 0xf0, 0x09, 0x24, 0xa4, 0xbd, 0xf8, 0x66, 0x51,
        0x7c, 0x95, 0xb8, 0x68, 0x7a, 0x5c, 0x6e, 0x63, 0x93, 0xba, 0x1a, 0x59,
        0x64, 0x92, 0xcd, 0x33, 0xc3, 0x57, 0xb3, 0x3b, 0xdd, 0xf9, 0xa2, 0x49,
        0x38, 0x34, 0x10, 0x31, 0x58, 0x4c, 0x55, 0xad, 0xac, 0x76, 0x80, 0x41,
        0x71, 0xe4, 0x94, 0x90, 0x11, 0x02, 0x4e, 0x81, 0x44, 0xfa, 0x04, 0xd5,
        0x91, 0x65, 0x73, 0x77,
      ]),
      "cd4132def6a670194430772477ac96f9f5ea2f342277782516f1f0295ac876e3",
      "695b062fe179828414d927321252fc6a608b72e78a2dc254fea3ce6fc1abe6363a003d3fe97b9a9ebf972cd3b2d00f6b3708229c9fb49b5f437d45a1a0b64d18f65ed1e56ca639fdaeaf619dd4b97f87ed75ee408c47ea7089cfd848c7b0216717ebbcc9832e2b1cc60ac03c96cca9d7f399a5ef199805d62a1d8886154af228294656c87e741b1fda230e200c3edc01fb7816e8f56d8e25ec42caf7c4bbb5031335bea8e2dee0ff305a1edbe3f14b26070d0bd2624f8db78f50dfc5f4cb53aa85b1a75df00924a4bdf866517c95b8687a5c6e6393ba1a596492cd33c357b33bddf9a24938341031584c55adac76804171e4949011024e8144fa04d591657377"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.RotorC,
      SymbolMapType.Rotor,
      "rotorC",
      new Uint8Array([
        0x6e, 0x9c, 0x1c, 0x4c, 0xdb, 0x40, 0x44, 0x2d, 0x34, 0x10, 0x41, 0x14,
        0xe0, 0x45, 0x8b, 0xdc, 0x32, 0x3d, 0xac, 0xa4, 0x6b, 0x53, 0x29, 0x60,
        0xde, 0xd1, 0x06, 0x93, 0x80, 0x42, 0xa3, 0xc2, 0x8d, 0xaf, 0xd9, 0x9e,
        0x0b, 0xca, 0x62, 0x1e, 0x52, 0xff, 0x71, 0x2f, 0xb0, 0x6a, 0x09, 0xaa,
        0x24, 0x4e, 0xe1, 0x87, 0x8f, 0x95, 0xf1, 0xe2, 0xa8, 0x75, 0xfd, 0x7d,
        0x0d, 0xbf, 0x89, 0xb9, 0x36, 0x58, 0xd4, 0x05, 0xe5, 0xec, 0x18, 0x5c,
        0x90, 0x6d, 0x46, 0xf5, 0xa0, 0x0a, 0x82, 0x23, 0xa6, 0x21, 0xcc, 0xd5,
        0xab, 0xd7, 0x28, 0xc5, 0xf3, 0x3c, 0x4b, 0xee, 0x84, 0x25, 0xe8, 0x03,
        0xad, 0xa9, 0x2a, 0x68, 0xd0, 0x5d, 0x39, 0xcd, 0xef, 0x63, 0x5b, 0x01,
        0x59, 0x74, 0xdf, 0x7f, 0x55, 0x48, 0x3a, 0x38, 0x02, 0x0c, 0xdd, 0xeb,
        0x1f, 0x1a, 0xa2, 0x73, 0xc9, 0xf7, 0x7b, 0xf6, 0x9b, 0x07, 0x3b, 0x22,
        0xb1, 0xb7, 0x70, 0xe3, 0x19, 0x12, 0x4a, 0x3e, 0xbb, 0x4f, 0xae, 0xf2,
        0x1b, 0xbe, 0x78, 0x56, 0x5f, 0x86, 0x98, 0x8a, 0xcb, 0xfb, 0x0e, 0x99,
        0x49, 0x08, 0x79, 0xb8, 0x57, 0xe9, 0xb3, 0x37, 0x26, 0x7a, 0x88, 0x13,
        0x51, 0xe6, 0xba, 0x6f, 0xa5, 0x64, 0xc1, 0xc6, 0xe4, 0xd3, 0x66, 0x6c,
        0x9d, 0x76, 0x2c, 0xa1, 0xc8, 0xf0, 0x43, 0x04, 0x81, 0xa7, 0x7c, 0x50,
        0xce, 0xed, 0x20, 0x69, 0x61, 0x85, 0xb6, 0x8c, 0x5e, 0x3f, 0x5a, 0x97,
        0x47, 0x2b, 0xc4, 0x9a, 0x00, 0xc3, 0x1d, 0x67, 0x54, 0x72, 0x33, 0x92,
        0xbd, 0x94, 0xf9, 0xc0, 0xbc, 0x27, 0xd8, 0xfa, 0x2e, 0xb2, 0x9f, 0x0f,
        0x96, 0x30, 0xcf, 0xf4, 0xfe, 0x17, 0xb4, 0x35, 0x77, 0xda, 0xea, 0xe7,
        0x7e, 0x65, 0xfc, 0xf8, 0x4d, 0x91, 0x8e, 0xd6, 0xc7, 0x11, 0x31, 0x83,
        0x16, 0xb5, 0x15, 0xd2,
      ]),
      "0b2fa17cda477da91e8f2396b1471d723a7ea15bfd3fe8f381fc3c48b0f88a47",
      "6e9c1c4cdb40442d34104114e0458bdc323daca46b532960ded106938042a3c28dafd99e0bca621e52ff712fb06a09aa244ee1878f95f1e2a875fd7d0dbf89b93658d405e5ec185c906d46f5a00a8223a621ccd5abd728c5f33c4bee8425e803ada92a68d05d39cdef635b015974df7f55483a38020cddeb1f1aa273c9f77bf69b073b22b1b770e319124a3ebb4faef21bbe78565f86988acbfb0e99490879b857e9b337267a881351e6ba6fa564c1c6e4d3666c9d762ca1c8f0430481a77c50ceed20696185b68c5e3f5a97472bc49a00c31d6754723392bd94f9c0bc27d8fa2eb29f0f9630cff4fe17b43577daeae77e65fcf84d918ed6c711318316b515d2"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.RotorD,
      SymbolMapType.Rotor,
      "rotorD",
      new Uint8Array([
        0x2a, 0x9d, 0x51, 0x22, 0x97, 0xff, 0x0d, 0x92, 0x04, 0x76, 0x31, 0x8a,
        0xc1, 0xda, 0xb6, 0xcd, 0x18, 0xe3, 0x00, 0x26, 0x7c, 0x8c, 0x70, 0x02,
        0x80, 0xd3, 0x2c, 0x73, 0x7d, 0xe0, 0xd4, 0x83, 0x62, 0xdd, 0x77, 0x24,
        0x4e, 0xf8, 0x87, 0xc7, 0xaf, 0x54, 0x6e, 0x17, 0x35, 0x93, 0x8b, 0xa5,
        0x08, 0x59, 0x53, 0x66, 0xa9, 0xac, 0x8d, 0xcb, 0x33, 0x94, 0x95, 0x45,
        0x88, 0x71, 0x16, 0xc2, 0x1a, 0xaa, 0x5f, 0xf1, 0xe9, 0xe2, 0xd6, 0x7f,
        0x50, 0xc4, 0x14, 0xbf, 0x4d, 0x34, 0x0a, 0x01, 0x1e, 0x37, 0x46, 0x0f,
        0x0e, 0x9c, 0x27, 0x05, 0x8f, 0x98, 0x79, 0x3c, 0xe6, 0x52, 0xb1, 0xf3,
        0x03, 0x7e, 0xf9, 0xb0, 0x5a, 0xb7, 0x40, 0x1d, 0x2f, 0x38, 0xd8, 0xef,
        0xb9, 0x41, 0x7b, 0x86, 0x4c, 0xec, 0x15, 0x89, 0x90, 0x60, 0x58, 0xf2,
        0xc3, 0x4f, 0x56, 0xb3, 0x82, 0xed, 0xf7, 0xba, 0x6c, 0x39, 0x2b, 0xc5,
        0x42, 0xfd, 0xb5, 0xd7, 0xa8, 0xe5, 0xd1, 0xc6, 0x25, 0xb2, 0x65, 0xdc,
        0xea, 0x3f, 0x20, 0x61, 0xbd, 0x32, 0x78, 0x81, 0x99, 0x9b, 0x23, 0xf4,
        0x12, 0x72, 0x64, 0x5d, 0xce, 0x3d, 0xc8, 0x4b, 0x3e, 0x09, 0x3b, 0x0b,
        0xfe, 0xf0, 0x19, 0xa1, 0x5b, 0x57, 0x0c, 0xf6, 0xad, 0x9e, 0x96, 0xcc,
        0x43, 0xbc, 0x6f, 0xee, 0x63, 0x9a, 0xfb, 0xa4, 0x68, 0xa2, 0xdf, 0xcf,
        0x49, 0x1c, 0x11, 0xc9, 0x44, 0x9f, 0x1f, 0xc0, 0x7a, 0x5e, 0xa7, 0x13,
        0x36, 0xe1, 0xe7, 0x6b, 0xca, 0xd5, 0x5c, 0xeb, 0x67, 0x74, 0x10, 0x8e,
        0x1b, 0xa0, 0x2d, 0x91, 0xe4, 0x6d, 0xa6, 0x30, 0xfa, 0x3a, 0x06, 0xdb,
        0x55, 0xde, 0x85, 0xe8, 0x21, 0xfc, 0xd2, 0x48, 0xd0, 0x29, 0x75, 0xf5,
        0x2e, 0x07, 0x69, 0xbb, 0xbe, 0xb4, 0xd9, 0x84, 0xae, 0x47, 0x28, 0xa3,
        0x4a, 0x6a, 0xb8, 0xab,
      ]),
      "25b71af1e5669b4ba07f5a44ef114451063226ee1dc79c092d0c28024315457b",
      "2a9d512297ff0d920476318ac1dab6cd18e300267c8c700280d32c737de0d48362dd77244ef887c7af546e1735938ba508595366a9ac8dcb33949545887116c21aaa5ff1e9e2d67f50c414bf4d340a011e37460f0e9c27058f98793ce652b1f3037ef9b05ab7401d2f38d8efb9417b864cec1589906058f2c34f56b382edf7ba6c392bc542fdb5d7a8e5d1c625b265dcea3f2061bd327881999b23f41272645dce3dc84b3e093b0bfef019a15b570cf6ad9e96cc43bc6fee639afba468a2dfcf491c11c9449f1fc07a5ea71336e1e76bcad55ceb6774108e1ba02d91e46da630fa3a06db55de85e821fcd248d02975f52e0769bbbeb4d984ae4728a34a6ab8ab"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.RotorE,
      SymbolMapType.Rotor,
      "rotorE",
      new Uint8Array([
        0x23, 0xaf, 0xcd, 0xb2, 0x1c, 0xa4, 0xbf, 0x9f, 0xab, 0x09, 0x1a, 0xe9,
        0xd2, 0xa0, 0x00, 0x5f, 0x72, 0xf9, 0x96, 0x55, 0xc7, 0xdf, 0xad, 0xb6,
        0x17, 0x01, 0x40, 0x54, 0x70, 0x80, 0x99, 0x14, 0xc8, 0xfb, 0x31, 0x52,
        0x94, 0x67, 0x45, 0x0d, 0xc0, 0x43, 0x10, 0x60, 0xfc, 0xb0, 0xb1, 0x83,
        0x59, 0xbb, 0x6b, 0xc4, 0x6c, 0x26, 0x28, 0xed, 0x75, 0x4f, 0x7c, 0xe7,
        0x95, 0x74, 0xd7, 0x2f, 0x8c, 0x2e, 0xb4, 0x69, 0x6e, 0x5e, 0xb8, 0x50,
        0x68, 0x9c, 0x7a, 0x5a, 0x62, 0x03, 0x57, 0x77, 0xd3, 0xe0, 0xb5, 0xa8,
        0x8e, 0x4b, 0x5c, 0xdc, 0x05, 0x64, 0xe2, 0x07, 0xf0, 0x0e, 0x9e, 0xa6,
        0x4a, 0x82, 0x89, 0x9a, 0x51, 0x2c, 0x33, 0x3a, 0x65, 0x0b, 0xfe, 0x90,
        0x79, 0xf6, 0xc3, 0xbc, 0x76, 0x1b, 0x11, 0x61, 0xf7, 0xe4, 0xbe, 0x7f,
        0xc1, 0x9b, 0xa3, 0x37, 0x97, 0x71, 0x20, 0x12, 0x1f, 0xe5, 0x25, 0x08,
        0xac, 0x85, 0x5d, 0x3e, 0x88, 0x4d, 0xf4, 0x49, 0x42, 0x93, 0x8f, 0xd0,
        0x21, 0x2a, 0x66, 0x35, 0xcc, 0xa7, 0xec, 0x3b, 0x91, 0xa2, 0x7d, 0x5b,
        0x4c, 0xc6, 0x34, 0x78, 0x41, 0xa1, 0xae, 0x30, 0x19, 0x2d, 0xb7, 0x1e,
        0x73, 0x87, 0x8d, 0xff, 0x44, 0xd5, 0xcb, 0xee, 0x06, 0x38, 0x2b, 0xeb,
        0x15, 0x58, 0xf1, 0x16, 0xc5, 0xda, 0x18, 0xde, 0x24, 0x39, 0xd1, 0xf8,
        0x56, 0xaa, 0xa9, 0xfd, 0xd9, 0x84, 0xd8, 0x46, 0xdb, 0x13, 0x0c, 0x3f,
        0xb3, 0xf3, 0x0a, 0x7b, 0xe1, 0x81, 0x0f, 0xca, 0x8a, 0x98, 0x6f, 0x8b,
        0xc2, 0xea, 0xe8, 0x9d, 0x47, 0xce, 0xd4, 0xa5, 0xba, 0xb9, 0x63, 0x3c,
        0xef, 0xc9, 0x29, 0x4e, 0x7e, 0x92, 0xcf, 0x6d, 0x1d, 0xfa, 0x22, 0xd6,
        0xe3, 0x27, 0x04, 0x3d, 0x86, 0x48, 0xdd, 0xf5, 0x53, 0x02, 0x36, 0x6a,
        0x32, 0xf2, 0xbd, 0xe6,
      ]),
      "4ff5eb5e71c3f1687ea4dcce3ec76a89656b590867c5c35463481659de9f54b8",
      "23afcdb21ca4bf9fab091ae9d2a0005f72f99655c7dfadb61701405470809914c8fb31529467450dc0431060fcb0b18359bb6bc46c2628ed754f7ce79574d72f8c2eb4696e5eb850689c7a5a62035777d3e0b5a88e4b5cdc0564e207f00e9ea64a82899a512c333a650bfe9079f6c3bc761b1161f7e4be7fc19ba337977120121fe52508ac855d3e884df44942938fd0212a6635cca7ec3b91a27d5b4cc6347841a1ae30192db71e73878dff44d5cbee06382beb1558f116c5da18de2439d1f856aaa9fdd984d846db130c3fb3f30a7be1810fca8a986f8bc2eae89d47ced4a5bab9633cefc9294e7e92cf6d1dfa22d6e327043d8648ddf55302366a32f2bde6"
    )
  ),
  Object.freeze(
    new SuppliedPartDatum(
      SuppliedPartType.ReflectorA,
      SymbolMapType.Reflector,
      "reflectorA",
      new Uint8Array([
        96, 37, 75, 124, 230, 90, 164, 149, 44, 57, 33, 31, 219, 252, 28, 35,
        168, 146, 122, 64, 204, 100, 177, 63, 193, 86, 201, 132, 14, 152, 139,
        11, 129, 10, 148, 15, 74, 1, 125, 210, 220, 250, 92, 150, 8, 198, 232,
        158, 95, 196, 72, 88, 163, 255, 234, 80, 191, 9, 60, 159, 58, 165, 156,
        23, 19, 161, 199, 218, 227, 203, 247, 236, 50, 249, 36, 2, 205, 228,
        144, 101, 55, 112, 106, 192, 209, 173, 25, 120, 51, 103, 5, 140, 42,
        102, 160, 48, 0, 189, 194, 126, 21, 79, 93, 89, 135, 243, 82, 166, 208,
        238, 143, 155, 81, 171, 134, 119, 239, 174, 131, 115, 87, 217, 18, 176,
        3, 38, 99, 231, 153, 32, 212, 118, 27, 200, 114, 104, 186, 222, 169, 30,
        91, 195, 157, 110, 78, 178, 17, 215, 34, 7, 43, 211, 29, 128, 162, 111,
        62, 142, 47, 59, 94, 65, 154, 52, 6, 61, 107, 253, 16, 138, 235, 113,
        185, 85, 117, 184, 123, 22, 145, 213, 229, 190, 188, 214, 175, 172, 136,
        216, 182, 97, 181, 56, 83, 24, 98, 141, 49, 244, 45, 66, 133, 26, 226,
        69, 20, 76, 240, 254, 108, 84, 39, 151, 130, 179, 183, 147, 187, 121,
        67, 12, 40, 248, 137, 237, 233, 246, 202, 68, 77, 180, 4, 127, 46, 224,
        54, 170, 71, 223, 109, 116, 206, 245, 251, 105, 197, 241, 225, 70, 221,
        73, 41, 242, 13, 167, 207, 53,
      ]),
      "74ca896767cdc3d28959c62e75c05037728db3f3edaddb8446ab7c243b0e0e3e",
      "60254b7ce65aa4952c39211fdbfc1c23a8927a40cc64b13fc156c9840e988b0b810a940f4a017dd2dcfa5c9608c6e89e5fc44858a3ffea50bf093c9f3aa59c1713a1c7dae3cbf7ec32f92402cde4906537706ac0d1ad19783367058c2a66a03000bdc27e154f5d5987f352a6d0ee8f9b51ab8677efae837357d912b0032663e79920d4761bc87268badea91e5bc39d6e4eb211d722072bd31d80a26f3e8e2f3b5e419a34063d6bfd108aeb71b95575b87b1691d5e5bebcd6afac88d8b661b5385318628d31f42d42851ae245144cf0fe6c54279782b3b793bb79430c28f889ede9f6ca444db4047f2ee036aa47df6d74cef5fb69c5f1e146dd4929f20da7cf35"
    )
  ),
];

export const suppliedPartChecksums: string[] = partData.map(
  (part) => part.checksumString
);

export function partByName(name: string): SuppliedPartDatum {
  for (let i = 0; i < partData.length; i++) {
    if (partData[i].name === name) {
      return partData[i];
    }
  }
  throw new Error("Part not found: " + name);
}

export function partByPartType(partType: SuppliedPartType): SuppliedPartDatum {
  for (let i = 0; i < partData.length; i++) {
    if (partData[i].suppliedPartType === partType) {
      return partData[i];
    }
  }
  throw new Error("Part not found: " + partType);
}
